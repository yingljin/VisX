[{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://yingljin.github.io/VisX/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"VisX workflow","text":"VisX application includes five tabs, supporting operations data pre-processing variable selection. tab consists input panel left side output panel right side. following sections, illustrate VisX workflow using “mtcars” data example. data built-data set R comprises fuel consumption 10 aspects automobile design performance 32 automobiles (1973–74 models). detailed description data can found https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/mtcars.html.","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"upload-and-initialization","dir":"Articles","previous_headings":"","what":"Upload and initialization","title":"VisX workflow","text":"data tab, first tab VisX, allows user upload data file local directory initializing variable sets following analysis. app currently supports csv files. Upload data uploaded, preview appear reactively output panel. left input panel, user can specify either remove variable dataset interest, specify type variable (numeric, nominal ordinal). important type variable determines correlation association measures used NPCA tab (details, please see Section 3). Initialization dataset includes variables variation missing values, cause failure calculation correlation association measures. VisX detect columns issue warnings data preview follows. case, best practice remove columns. Warning messages. fake_col fake_col2 fake variables created demonstration.","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"pre-preocessing","dir":"Articles","previous_headings":"","what":"Pre-preocessing","title":"VisX workflow","text":"following two tabs, numeric variables categorical variables, support basic operations data pre-processing. Please note illustration purposes, specified original variable cyl (number cylinders) nominal, vs (V-shaped straight engine), (automatic manual transmission), gear (number forward gears) carb (Number carburetors) ordinal.","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"numeric-variables","dir":"Articles","previous_headings":"Pre-preocessing","what":"Numeric variables","title":"VisX workflow","text":"tab presents histograms numeric variable dataset, mean one standard deviation around mean marked respectively solid dashed red lines. example , distribution six numeric variables mtcars displayed. Distribution original numeric varaibles single numeric variables, tab supports log square-root transformation “Univariate transformation” section. example log-transforming two variables (mpg disp). Users can select variables transform type transformation left input panel.  clicking “Transform variable(s)” button, histograms new variables show reactively right side, original variables. VisX name new variable adding type transformation original variable names (e.g. disp_log).  tab also supports creation composite variables, including ratio two variables mean set variables. example present example creating ratio hp (gross horsepower) wt (weight). User can select variables numerator denominator variable list :  However, type operation name new composite variable now specified “Multivariate operation” section:  clicking “Create variable(s)” button, histograms new composite variable appear reactively right side, original variables.","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"categorical-variables","dir":"Articles","previous_headings":"Pre-preocessing","what":"Categorical variables","title":"VisX workflow","text":"tab presents barplot categorical variable dataset. presented , output panel shows distribution one nominal variable four ordinal variables.  existing categorical variable, tabs supports binning existing levels new levels, particularly useful variable can take may different value small sample size value. present example binning “carb” variable (number carburetors). operations done “Collapsing” section left input panel. User can select variable operate , list unique values show reactively “Levels collapse”. User can select values bin, specify name new binned level, specify whether new binned variable coded nominal ordinal. example, cars 6 8 carburetors collapsed single level “6+”.  clicking “Update” button, new variable created barplot appears original barplots. VisX names new variable automatically attaching “bin” original variable name.  tab also supports create new binary variable based numeric variables dataset. Relevant operations implemented “Dichotomization” section left. User can select numeric variable dichotomize, threshold bar updated reactively range chosen variable. User can choose threshold dchotomization, name new levels specify type new binary variable. example dichotomizing “wt” (weight) variable “heavy” “light” levels.  clicking “Creat variable” button, new variable created barplot appears original barplots. VisX names new variable automatically attaching “bi” original variable name.","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"network-plot-of-correlation-an-association-npca","dir":"Articles","previous_headings":"","what":"Network plot of correlation an association (NPCA)","title":"VisX workflow","text":"next tab presents diagram pairwise similarity variables currently dataset, major advance previous version. new diagram, measure test association/correlation pair variables determined types, specifically follows: nominal vs numeric, nominal ordinal: Pseudo \\(R^2\\) p value univariate multinomial regression ordinal vs ordinal numeric: GK gamma GK gamma correlation test numeric vs numeric: Spearman correlation Spearman correlation test use different types variable correlation/association measures allows us treat variable properly, instead arbitrarily creating numeric dummy variables nominal variables. visualization scheme also updated addition new feature, explained example : NPCA, variable represented point 2-D space, type indicated point shape. figure , numeric variables represend circles. one nominal variables specified first tab (cyl) triangle, four ordinal variables(vs, , gear carb) diamonds. Position variable determined similarity variables CMD scale, similar variables closer . also include two different color scales different type correlation/association measures. directional ones (Spearman GKgamma correaltion) represented pink-blue scale, since values can either negative positive. indirectional association, please note PseudoR, square-root Pseudo \\(R^2\\), used comparable correlation measures. measure represened orange color scale. features remain similar previous version, color hue, transparency thickness edges represents strength correlation. User can also change visualization operations left panel, remove/include variables, indicate significance correlation/association solid black lines overlaying edges, change threshold correlation/association strength visualization. example removing set variables:  another example showing significant correlation/association (p < 0.05):","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"statistics","dir":"Articles","previous_headings":"Network plot of correlation an association (NPCA)","what":"Statistics","title":"VisX workflow","text":"following two tabs also reactive NPCA tab, displaying useful information variable selection. “Correlation association matrix” tab displays raw value Spearman/GKgamma correlation Pseudo R, significane indicated stars. Rows columns grouped variable type.  “Statistics” tab presents statistics multicollinearity, including Generalized Variance Inflation Factor (GVIF), adjustment degress freedom. R-squared variable versus variables also presented. However, numeric ordinal variables, R-suqared extracted mulitple linear regression, nominal variable quantity fact Pseudo R-squared multinomial regression.","code":""},{"path":"https://yingljin.github.io/VisX/articles/VisX_workflow.html","id":"bookmark-and-interative-use","dir":"Articles","previous_headings":"","what":"Bookmark and interative use","title":"VisX workflow","text":"VisX support interative operation across panels, meaning users can go back previous panels operations without overriding previous operations (except data panel, re-initialization may overide previous operations). addition, VisX also supports reproducing results running server. clicking “Bookmark” bottom left input panel, bookmark link generated, user later open browser retrieve app left.","code":""},{"path":"https://yingljin.github.io/VisX/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ying Jin. Maintainer. Ryan Peterson. Author. Carsten Goerg. Author.","code":""},{"path":"https://yingljin.github.io/VisX/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peterson R, Goerg C (2022). VisX: Visual interactive model selection. R package version 0.2.0, https://yingljin.github.io/VisX/.","code":"@Manual{,   title = {VisX: Visual interactive model selection},   author = {Ryan Peterson and Carsten Goerg},   year = {2022},   note = {R package version 0.2.0},   url = {https://yingljin.github.io/VisX/}, }"},{"path":"https://yingljin.github.io/VisX/index.html","id":"visx","dir":"","previous_headings":"","what":"Visual interactive model selection","title":"Visual interactive model selection","text":"goal VisX provide dynamic, interactive visualization distribution correlation/association structure multi-dimensional data. supports real-time data preprocessing presents important information variable selection.","code":""},{"path":"https://yingljin.github.io/VisX/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visual interactive model selection","text":"can install development version VisX GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"yingljin/VisX\")"},{"path":"https://yingljin.github.io/VisX/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Visual interactive model selection","text":"basic example shows launch VisX app:","code":"library(VisX) ## launch app VisX()"},{"path":"https://yingljin.github.io/VisX/index.html","id":"video-walkthrough","dir":"","previous_headings":"","what":"Video walkthrough","title":"Visual interactive model selection","text":"video walkthrough application made available, linked :","code":""},{"path":"https://yingljin.github.io/VisX/reference/VisX.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the VisX application — VisX","title":"Run the VisX application — VisX","text":"function starts VisX application basic data pre-processing variables selection","code":""},{"path":"https://yingljin.github.io/VisX/reference/VisX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the VisX application — VisX","text":"","code":"VisX()"},{"path":"https://yingljin.github.io/VisX/reference/VisX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the VisX application — VisX","text":"Histograms continuous variables; Barplots discrete variables; Correlation diagram; Variance inflation factors (VIFs) R-squared; Correlation coefficient p values correlation test","code":""},{"path":"https://yingljin.github.io/VisX/reference/VisX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the VisX application — VisX","text":"application currently supports files csv format. Application interface pop calling function; data can uploaded interface; close interface interrupt R stop application.","code":""},{"path":"https://yingljin.github.io/VisX/reference/corstars.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation and association matrix — corstars","title":"Correlation and association matrix — corstars","text":"Calculate pairwise correlation matrix significance marked stars. Columns rows grouped variable type","code":""},{"path":"https://yingljin.github.io/VisX/reference/corstars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation and association matrix — corstars","text":"","code":"corstars(cor_value, cor_p, var_type)"},{"path":"https://yingljin.github.io/VisX/reference/corstars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation and association matrix — corstars","text":"cor_value association matrix cor_p significance association test var_type type variables correlation association calculated ","code":""},{"path":"https://yingljin.github.io/VisX/reference/corstars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation and association matrix — corstars","text":"Correlation coefficient significance correlation test pair variables, well variable type corresponding rows columns display shiny app","code":""},{"path":"https://yingljin.github.io/VisX/reference/corstars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation and association matrix — corstars","text":"","code":"data(mtcars) library(VisX) types <- rep(\"numeric\", ncol(mtcars)) test <- VisX::pairwise_cor(mtcars, types) #> Error: 'pairwise_cor' is not an exported object from 'namespace:VisX' type <- c(\"numeric\", \"factor\",  rep(\"numeric\", 5), rep(\"factor\", 2), rep(\"ordinal\", 2)) corstars(test$cor_value, test$cor_p, type) #> Error in corstars(test$cor_value, test$cor_p, type): object 'test' not found"},{"path":"https://yingljin.github.io/VisX/reference/data_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for columns that are empty/identical — data_check","title":"Check for columns that are empty/identical — data_check","text":"Check columns empty/identical","code":""},{"path":"https://yingljin.github.io/VisX/reference/data_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for columns that are empty/identical — data_check","text":"","code":"data_check(df)"},{"path":"https://yingljin.github.io/VisX/reference/data_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for columns that are empty/identical — data_check","text":"df dataframe check","code":""},{"path":"https://yingljin.github.io/VisX/reference/data_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for columns that are empty/identical — data_check","text":"warning message exists empty columns columns variation data","code":""},{"path":"https://yingljin.github.io/VisX/reference/data_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for columns that are empty/identical — data_check","text":"","code":"df <- data.frame(x1 = rnorm(100), x2 = rnorm(100), x3 = NA, x4 = 1) data_check(df) #> Error in data_check(df): could not find function \"data_check\""},{"path":"https://yingljin.github.io/VisX/reference/get_r2.html","id":null,"dir":"Reference","previous_headings":"","what":"R-squared — get_r2","title":"R-squared — get_r2","text":"Compute R-squared variable versus covariates","code":""},{"path":"https://yingljin.github.io/VisX/reference/get_r2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R-squared — get_r2","text":"","code":"get_r2(df, type)"},{"path":"https://yingljin.github.io/VisX/reference/get_r2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R-squared — get_r2","text":"df data frame type type corresponding columns df","code":""},{"path":"https://yingljin.github.io/VisX/reference/get_r2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R-squared — get_r2","text":"vector values R squared variable","code":""},{"path":"https://yingljin.github.io/VisX/reference/get_r2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R-squared — get_r2","text":"R-squared measure collinearity, defined one variable linearly associated variables data set.","code":""},{"path":"https://yingljin.github.io/VisX/reference/get_r2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R-squared — get_r2","text":"","code":"df <- data.frame(X1 = rnorm(100), X2 = rnorm(100), X3 = rnorm(100)) get_r2j(df, rep(\"numeric\", 3)) #> Error in get_r2j(df, rep(\"numeric\", 3)): could not find function \"get_r2j\""},{"path":"https://yingljin.github.io/VisX/reference/make_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize categorical variables — make_bar","title":"Visualize categorical variables — make_bar","text":"functions generates barplots categorical variable","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize categorical variables — make_bar","text":"","code":"make_bar(df_bar)"},{"path":"https://yingljin.github.io/VisX/reference/make_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize categorical variables — make_bar","text":"df_bar wide-format data include categorical variables visualize","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize categorical variables — make_bar","text":"Barplots categorical variable tab","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_bar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize categorical variables — make_bar","text":"function run internally VisX application depends  reactive values user input","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize numeric variables — make_hist","title":"Visualize numeric variables — make_hist","text":"functions generates histograms marks mean one standard deviation band around mean numeric variable","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize numeric variables — make_hist","text":"","code":"make_hist(df_hist)"},{"path":"https://yingljin.github.io/VisX/reference/make_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize numeric variables — make_hist","text":"df_hist wide-format data include numeric variables visualize","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize numeric variables — make_hist","text":"Annotated histograms numeric variable tab","code":""},{"path":"https://yingljin.github.io/VisX/reference/make_hist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize numeric variables — make_hist","text":"function run internally VisX application depends  reactive values user input","code":""},{"path":"https://yingljin.github.io/VisX/reference/npc_mixed_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Network Plot of Association — npc_mixed_cor","title":"Network Plot of Association — npc_mixed_cor","text":"Network Plot Association","code":""},{"path":"https://yingljin.github.io/VisX/reference/npc_mixed_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network Plot of Association — npc_mixed_cor","text":"","code":"npc_mixed_cor(   cor_value,   cor_type,   cor_p,   var_type,   sig.level = 0.05,   min_cor = 0.3,   show_signif = FALSE,   legend = TRUE,   repel = TRUE,   label_size = 5,   overlay = TRUE )"},{"path":"https://yingljin.github.io/VisX/reference/npc_mixed_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network Plot of Association — npc_mixed_cor","text":"cor_value matrix values association measures cor_type matrix types association measures cor_p matrix p values association tests var_type character vector types variables association measured sig.level maximum significance visualized min_cor minimum association visualized show_signif whether visualize significance association legend TURE, legend repel TRUE, text labels variable names repel label_size size text labels variable names overlay TRUE, show significant association min_cor threshold","code":""},{"path":"https://yingljin.github.io/VisX/reference/npc_mixed_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network Plot of Association — npc_mixed_cor","text":"network plot association","code":""},{"path":"https://yingljin.github.io/VisX/reference/npc_mixed_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network Plot of Association — npc_mixed_cor","text":"","code":"data(\"mtcars\") type1 <- c(rep(\"numeric\", 7), rep(\"factor\", 2), rep(\"ordinal\", 2)) test_cor1 <- pairwise_cor(mtcars, type1) #> Error in pairwise_cor(mtcars, type1): could not find function \"pairwise_cor\" npc_mixed_cor(test_cor1$cor_value, test_cor1$cor_type, test_cor1$cor_p, type1) #> Error in npc_mixed_cor(test_cor1$cor_value, test_cor1$cor_type, test_cor1$cor_p,     type1): could not find function \"npc_mixed_cor\""},{"path":"https://yingljin.github.io/VisX/reference/pair_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate association measure between a pair of variables — pair_cor","title":"Calculate association measure between a pair of variables — pair_cor","text":"Calculate association measure pair variables","code":""},{"path":"https://yingljin.github.io/VisX/reference/pair_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate association measure between a pair of variables — pair_cor","text":"","code":"pair_cor(df, type)"},{"path":"https://yingljin.github.io/VisX/reference/pair_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate association measure between a pair of variables — pair_cor","text":"df dataframe 2 columns type vector 2 elements corresponding types variables df. Types can \"numeric\", \"ordinal\" \"factor\", numeric.","code":""},{"path":"https://yingljin.github.io/VisX/reference/pair_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate association measure between a pair of variables — pair_cor","text":"values type association measure, well p value corresponding association test","code":""},{"path":"https://yingljin.github.io/VisX/reference/pair_cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate association measure between a pair of variables — pair_cor","text":"following associated measures tests implemented dependent variable type: factor vs numeric, factor ordinal: Pseudo R^2 p value multinomial regression ordinal vs ordinal numeric: GK gamma GK gamma correlation test","code":""},{"path":"https://yingljin.github.io/VisX/reference/pair_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate association measure between a pair of variables — pair_cor","text":"","code":"data1 <- data.frame(x = rnorm(10), y = rbinom(10, 1, 0.5)) # second variable as factor type1 <- c(\"numeric\", \"factor\") pair_cor(data1, type1) #> Error in pair_cor(data1, type1): could not find function \"pair_cor\" # second variable as ordinal type2 <- c(\"numeric\", \"ordinal\") pair_cor(data1, type2) #> Error in pair_cor(data1, type2): could not find function \"pair_cor\""},{"path":"https://yingljin.github.io/VisX/reference/pairwise_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","title":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","text":"Calculate pariwise association data mixed types variables","code":""},{"path":"https://yingljin.github.io/VisX/reference/pairwise_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","text":"","code":"pairwise_cor(df, var_type)"},{"path":"https://yingljin.github.io/VisX/reference/pairwise_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","text":"df dataframe mixed types variables var_type charater vector corresponding types variables df","code":""},{"path":"https://yingljin.github.io/VisX/reference/pairwise_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","text":"matrices measures, types p values association","code":""},{"path":"https://yingljin.github.io/VisX/reference/pairwise_cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","text":"following associated measures tests implemented dependent variable type: factor vs numeric, factor ordinal: Pseudo R^2 p value multinomial regression ordinal vs ordinal numeric: GK gamma GK gamma correlation test numeric vs numeric: Spearman correlation p value","code":""},{"path":"https://yingljin.github.io/VisX/reference/pairwise_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate pariwise association of data with mixed types of variables — pairwise_cor","text":"","code":"data1 <- data.frame(x = rnorm(10),  y = rbinom(10, 1, 0.5), z = rbinom(10, 5, 0.5)) type1 <- c(\"numeric\", \"factor\", \"ordinal\") pairwise_cor(data1, type1) #> Error in pairwise_cor(data1, type1): could not find function \"pairwise_cor\""}]
